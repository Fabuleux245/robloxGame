-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-07-21 08:50:17
-- Luau version 6, Types version 3
-- Time taken: 0.000632 seconds

return {
	kitchenSinkSDL = "\n\"\"\"This is a description of the schema as a whole.\"\"\"\nschema {\n  query: QueryType\n  mutation: MutationType\n}\n\n\"\"\"\nThis is a description\nof the `Foo` type.\n\"\"\"\ntype Foo implements Bar & Baz & Two {\n  \"Description of the `one` field.\"\n  one: Type\n  \"\"\"\n  This is a description of the `two` field.\n  \"\"\"\n  two(\n    \"\"\"\n    This is a description of the `argument` argument.\n    \"\"\"\n    argument: InputType!\n  ): Type\n  \"\"\"This is a description of the `three` field.\"\"\"\n  three(argument: InputType, other: String): Int\n  four(argument: String = \"string\"): String\n  five(argument: [String] = [\"string\", \"string\"]): String\n  six(argument: InputType = {key: \"value\"}): Type\n  seven(argument: Int = null): Type\n}\n\ntype AnnotatedObject @onObject(arg: \"value\") {\n  annotatedField(arg: Type = \"default\" @onArgumentDefinition): Type @onField\n}\n\ntype UndefinedType\n\nextend type Foo {\n  seven(argument: [String]): Type\n}\n\nextend type Foo @onType\n\ninterface Bar {\n  one: Type\n  four(argument: String = \"string\"): String\n}\n\ninterface AnnotatedInterface @onInterface {\n  annotatedField(arg: Type @onArgumentDefinition): Type @onField\n}\n\ninterface UndefinedInterface\n\nextend interface Bar implements Two {\n  two(argument: InputType!): Type\n}\n\nextend interface Bar @onInterface\n\ninterface Baz implements Bar & Two {\n  one: Type\n  two(argument: InputType!): Type\n  four(argument: String = \"string\"): String\n}\n\nunion Feed =\n  | Story\n  | Article\n  | Advert\n\nunion AnnotatedUnion @onUnion = A | B\n\nunion AnnotatedUnionTwo @onUnion = | A | B\n\nunion UndefinedUnion\n\nextend union Feed = Photo | Video\n\nextend union Feed @onUnion\n\nscalar CustomScalar\n\nscalar AnnotatedScalar @onScalar\n\nextend scalar CustomScalar @onScalar\n\nenum Site {\n  \"\"\"\n  This is a description of the `DESKTOP` value\n  \"\"\"\n  DESKTOP\n\n  \"\"\"This is a description of the `MOBILE` value\"\"\"\n  MOBILE\n\n  \"This is a description of the `WEB` value\"\n  WEB\n}\n\nenum AnnotatedEnum @onEnum {\n  ANNOTATED_VALUE @onEnumValue\n  OTHER_VALUE\n}\n\nenum UndefinedEnum\n\nextend enum Site {\n  VR\n}\n\nextend enum Site @onEnum\n\ninput InputType {\n  key: String!\n  answer: Int = 42\n}\n\ninput AnnotatedInput @onInputObject {\n  annotatedField: Type @onInputFieldDefinition\n}\n\ninput UndefinedInput\n\nextend input InputType {\n  other: Float = 1.23e4 @onInputFieldDefinition\n}\n\nextend input InputType @onInputObject\n\n\"\"\"\nThis is a description of the `@skip` directive\n\"\"\"\ndirective @skip(\n  \"\"\"This is a description of the `if` argument\"\"\"\n  if: Boolean! @onArgumentDefinition\n) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @include(if: Boolean!)\n  on FIELD\n   | FRAGMENT_SPREAD\n   | INLINE_FRAGMENT\n\ndirective @include2(if: Boolean!) on\n  | FIELD\n  | FRAGMENT_SPREAD\n  | INLINE_FRAGMENT\n\ndirective @myRepeatableDir(name: String!) repeatable on\n  | OBJECT\n  | INTERFACE\n\nextend schema @onSchema\n\nextend schema @onSchema {\n  subscription: SubscriptionType\n}\n";
}